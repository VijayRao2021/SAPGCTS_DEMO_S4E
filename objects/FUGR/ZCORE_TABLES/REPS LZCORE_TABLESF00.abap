*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 05.02.2019 at 16:47:40
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZV_PROC_HEADER..................................*
FORM GET_DATA_ZV_PROC_HEADER.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZPROC_HEADER WHERE
(VIM_WHERETAB) .
    CLEAR ZV_PROC_HEADER .
ZV_PROC_HEADER-MANDT =
ZPROC_HEADER-MANDT .
ZV_PROC_HEADER-PROCESS_ID =
ZPROC_HEADER-PROCESS_ID .
ZV_PROC_HEADER-PARENT_PROCESS =
ZPROC_HEADER-PARENT_PROCESS .
ZV_PROC_HEADER-PROCESS_TYPE =
ZPROC_HEADER-PROCESS_TYPE .
ZV_PROC_HEADER-BUSINESS_DOC_URL =
ZPROC_HEADER-BUSINESS_DOC_URL .
ZV_PROC_HEADER-FUNCTIONNAL_DOC_URL =
ZPROC_HEADER-FUNCTIONNAL_DOC_URL .
ZV_PROC_HEADER-TECHNICAL_DOC_URL =
ZPROC_HEADER-TECHNICAL_DOC_URL .
ZV_PROC_HEADER-PROGRAM_NAME =
ZPROC_HEADER-PROGRAM_NAME .
    SELECT SINGLE * FROM ZPROC_TEXT WHERE
PROCESS_ID = ZPROC_HEADER-PROCESS_ID AND
LANGUAGE = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZV_PROC_HEADER-PROCESS_DESCRIPTION =
ZPROC_TEXT-PROCESS_DESCRIPTION .
    ENDIF.
<VIM_TOTAL_STRUC> = ZV_PROC_HEADER.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_PROC_HEADER .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_PROC_HEADER.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_PROC_HEADER-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZPROC_HEADER WHERE
  PROCESS_ID = ZV_PROC_HEADER-PROCESS_ID .
    IF SY-SUBRC = 0.
    DELETE ZPROC_HEADER .
    ENDIF.
    DELETE FROM ZPROC_TEXT WHERE
    PROCESS_ID = ZPROC_HEADER-PROCESS_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZPROC_HEADER WHERE
  PROCESS_ID = ZV_PROC_HEADER-PROCESS_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZPROC_HEADER.
    ENDIF.
ZPROC_HEADER-MANDT =
ZV_PROC_HEADER-MANDT .
ZPROC_HEADER-PROCESS_ID =
ZV_PROC_HEADER-PROCESS_ID .
ZPROC_HEADER-PARENT_PROCESS =
ZV_PROC_HEADER-PARENT_PROCESS .
ZPROC_HEADER-PROCESS_TYPE =
ZV_PROC_HEADER-PROCESS_TYPE .
ZPROC_HEADER-BUSINESS_DOC_URL =
ZV_PROC_HEADER-BUSINESS_DOC_URL .
ZPROC_HEADER-FUNCTIONNAL_DOC_URL =
ZV_PROC_HEADER-FUNCTIONNAL_DOC_URL .
ZPROC_HEADER-TECHNICAL_DOC_URL =
ZV_PROC_HEADER-TECHNICAL_DOC_URL .
ZPROC_HEADER-PROGRAM_NAME =
ZV_PROC_HEADER-PROGRAM_NAME .
    IF SY-SUBRC = 0.
    UPDATE ZPROC_HEADER .
    ELSE.
    INSERT ZPROC_HEADER .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZPROC_TEXT WHERE
    PROCESS_ID = ZPROC_HEADER-PROCESS_ID AND
    LANGUAGE = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZPROC_TEXT.
ZPROC_TEXT-PROCESS_ID =
ZPROC_HEADER-PROCESS_ID .
ZPROC_TEXT-LANGUAGE =
SY-LANGU .
      ENDIF.
ZPROC_TEXT-PROCESS_DESCRIPTION =
ZV_PROC_HEADER-PROCESS_DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE ZPROC_TEXT .
    ELSE.
    INSERT ZPROC_TEXT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_PROC_HEADER-UPD_FLAG,
STATUS_ZV_PROC_HEADER-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZV_PROC_HEADER.
  SELECT SINGLE * FROM ZPROC_HEADER WHERE
PROCESS_ID = ZV_PROC_HEADER-PROCESS_ID .
ZV_PROC_HEADER-MANDT =
ZPROC_HEADER-MANDT .
ZV_PROC_HEADER-PROCESS_ID =
ZPROC_HEADER-PROCESS_ID .
ZV_PROC_HEADER-PARENT_PROCESS =
ZPROC_HEADER-PARENT_PROCESS .
ZV_PROC_HEADER-PROCESS_TYPE =
ZPROC_HEADER-PROCESS_TYPE .
ZV_PROC_HEADER-BUSINESS_DOC_URL =
ZPROC_HEADER-BUSINESS_DOC_URL .
ZV_PROC_HEADER-FUNCTIONNAL_DOC_URL =
ZPROC_HEADER-FUNCTIONNAL_DOC_URL .
ZV_PROC_HEADER-TECHNICAL_DOC_URL =
ZPROC_HEADER-TECHNICAL_DOC_URL .
ZV_PROC_HEADER-PROGRAM_NAME =
ZPROC_HEADER-PROGRAM_NAME .
    SELECT SINGLE * FROM ZPROC_TEXT WHERE
PROCESS_ID = ZPROC_HEADER-PROCESS_ID AND
LANGUAGE = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZV_PROC_HEADER-PROCESS_DESCRIPTION =
ZPROC_TEXT-PROCESS_DESCRIPTION .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZV_PROC_HEADER-PROCESS_DESCRIPTION .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_PROC_HEADER USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_PROC_HEADER-PROCESS_ID TO
ZPROC_HEADER-PROCESS_ID .
MOVE ZV_PROC_HEADER-MANDT TO
ZPROC_HEADER-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZPROC_HEADER'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZPROC_HEADER TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZPROC_HEADER'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZPROC_HEADER-PROCESS_ID TO
ZPROC_TEXT-PROCESS_ID .
MOVE SY-LANGU TO
ZPROC_TEXT-LANGUAGE .
MOVE ZV_PROC_HEADER-MANDT TO
ZPROC_TEXT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZPROC_TEXT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZPROC_TEXT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZPROC_TEXT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZV_PROC_TEXT....................................*
FORM GET_DATA_ZV_PROC_TEXT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZPROC_TEXT WHERE
(VIM_WHERETAB) .
    CLEAR ZV_PROC_TEXT .
ZV_PROC_TEXT-MANDT =
ZPROC_TEXT-MANDT .
ZV_PROC_TEXT-PROCESS_ID =
ZPROC_TEXT-PROCESS_ID .
ZV_PROC_TEXT-LANGUAGE =
ZPROC_TEXT-LANGUAGE .
ZV_PROC_TEXT-PROCESS_DESCRIPTION =
ZPROC_TEXT-PROCESS_DESCRIPTION .
<VIM_TOTAL_STRUC> = ZV_PROC_TEXT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_PROC_TEXT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_PROC_TEXT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_PROC_TEXT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZPROC_TEXT WHERE
  PROCESS_ID = ZV_PROC_TEXT-PROCESS_ID AND
  LANGUAGE = ZV_PROC_TEXT-LANGUAGE .
    IF SY-SUBRC = 0.
    DELETE ZPROC_TEXT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZPROC_TEXT WHERE
  PROCESS_ID = ZV_PROC_TEXT-PROCESS_ID AND
  LANGUAGE = ZV_PROC_TEXT-LANGUAGE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZPROC_TEXT.
    ENDIF.
ZPROC_TEXT-MANDT =
ZV_PROC_TEXT-MANDT .
ZPROC_TEXT-PROCESS_ID =
ZV_PROC_TEXT-PROCESS_ID .
ZPROC_TEXT-LANGUAGE =
ZV_PROC_TEXT-LANGUAGE .
ZPROC_TEXT-PROCESS_DESCRIPTION =
ZV_PROC_TEXT-PROCESS_DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE ZPROC_TEXT .
    ELSE.
    INSERT ZPROC_TEXT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_PROC_TEXT-UPD_FLAG,
STATUS_ZV_PROC_TEXT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZV_PROC_TEXT.
  SELECT SINGLE * FROM ZPROC_TEXT WHERE
PROCESS_ID = ZV_PROC_TEXT-PROCESS_ID AND
LANGUAGE = ZV_PROC_TEXT-LANGUAGE .
ZV_PROC_TEXT-MANDT =
ZPROC_TEXT-MANDT .
ZV_PROC_TEXT-PROCESS_ID =
ZPROC_TEXT-PROCESS_ID .
ZV_PROC_TEXT-LANGUAGE =
ZPROC_TEXT-LANGUAGE .
ZV_PROC_TEXT-PROCESS_DESCRIPTION =
ZPROC_TEXT-PROCESS_DESCRIPTION .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_PROC_TEXT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_PROC_TEXT-PROCESS_ID TO
ZPROC_TEXT-PROCESS_ID .
MOVE ZV_PROC_TEXT-LANGUAGE TO
ZPROC_TEXT-LANGUAGE .
MOVE ZV_PROC_TEXT-MANDT TO
ZPROC_TEXT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZPROC_TEXT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZPROC_TEXT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZPROC_TEXT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*